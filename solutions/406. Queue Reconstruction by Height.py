class Solution:
    def reconstructQueue(self, people: List[List[int]]) -> List[List[int]]:
        # 这道题目 没怎么理解，一眼看去 没什么思路啊
        # 首先是按照身高排序，从高到低排序，然后再身高 排定 的基础上，进行k 的从小到大的排序
        people.sort(key = lambda x:(-x[0],x[1]))
        # 这边 key 值里面 (-x[0],x[1]) 的写法很妙，一般 固定写法都是 key = lambda x:x[?] 
        # 这边的意思就是 按照 列表里面元素的第一个 索引值进行从大到小 的排序，然后在就第二个 索引的值，进行从小到大的排序。

        # 然后再进行 k值 的排序。
        que = []
        for p in people:
            que.insert(p[1], p)    # p[1],指的是 插入列表中的位置索引，用 二维数组元素里面的第二个元素 的值来表示； p 是要插入到列表中的元素。
        return que

        # 这道题目的价值很高， 我很难想到，我可能好好思考能想得到 要对于身高进行降序 的排序，但是根本想不到 根据k 的排序，和最后的队列插入依仗 是根据第一次排序 完成之后 ki 来插入 列表。
        #　我只能说很妙，无论是数学的理解和　代码的实现还是　方法的熟练度上，都完败了。
        